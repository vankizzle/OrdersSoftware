Build1=Default,b4a.diplomna
File1=express-shop-logo-01.jpg
File2=Logo2.jpg
File3=Logo3.jpg
File4=optbutton.png
File5=scanbtn1.png
FileGroup1=Default Group
FileGroup2=Default Group
FileGroup3=Default Group
FileGroup4=Default Group
FileGroup5=Default Group
Group=Default Group
IconFile=
Library1=core
Library2=reflection
Library3=okhttputils2
Library4=json
Library5=phone
Library6=b4azxing
Library7=camera
Library8=runtimepermissions
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: https://www.b4x.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="5" android:targetSdkVersion="27"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~CreateResourceFromFile(Macro, Themes.DarkTheme)~\n~AddApplicationText(<activity android:name="ice.zxing.CaptureActivity"~\n~android:screenOrientation="landscape"~\n~android:theme="@android:style/Theme.NoTitleBar.Fullscreen"~\n~android:windowSoftInputMode="adjustResize|stateHidden">~\n~</activity>)~\n~'End of default text.~\n~
Module1=LoginScreen
Module10=RegisterScreen
Module11=OrdersCart
Module12=ClientOrdersScreen
Module13=OrderInfoVisualizer
Module14=Types
Module15=ItemInfoVisualizer
Module16=AppColors
Module17=Data
Module18=GeneralSettingsScreen
Module19=MyOrdersScreen
Module2=SettingsMenu
Module20=Starter
Module3=UISizes
Module4=HTTP_Requests
Module5=JSONSerializations
Module6=ShoppingCart
Module7=Support
Module8=MainScreen
Module9=AppSettingsScreen
NumberOfFiles=5
NumberOfLibraries=8
NumberOfModules=20
Version=8.8
@EndOfDesignText@

#Region  Project Attributes 
	#ApplicationLabel: B4A Example
	#VersionCode: 1
	#VersionName: 
	'SupportedOrientations possible values: unspecified, landscape or portrait.
	#SupportedOrientations: portrait
	#CanInstallToExternalStorage: False
#End Region

#Region  Activity Attributes 
	#FullScreen: True
	#IncludeTitle: False
#End Region

Sub Process_Globals
	'These global variables will be declared once when the application starts.
	'These variables can be accessed from all modules.
	Public LoggedCustomer As Customer
	Public RP As RuntimePermissions
	Public HTTP As HTTP_Requests
End Sub

Sub Globals
	'These global variables will be redeclared each time the activity is created.
	'These variables can only be accessed from this module.
	Private ScreenLogin As LoginScreen
	Private ScreenRegister As RegisterScreen
	Private AppMainScreen As MainScreen
	Private ClientOrders As ClientOrdersScreen
	Private AppSettings As AppSettingsScreen

	Public ScreenX, ScreenY As Int
	Public IsLandscape As Boolean
End Sub

Sub Activity_Create(FirstTime As Boolean)
	'Do not forget to load the layout file created with the visual designer. For example:
	'Activity.LoadLayout("Layout1")
	If (APIVersion >= 23) Then
		RP.CheckAndRequest(RP.PERMISSION_WRITE_EXTERNAL_STORAGE)
		Wait For Activity_PermissionResult(Permission As String, Result As Boolean)
		If Not (Result) Then
			Log("storage permission error")
'			Msgbox(translate.GetString("lblWritePermission"),translate.GetString("lblWarning"))
			Activity.Finish
		End If
		RP.CheckAndRequest(RP.PERMISSION_CAMERA)
		Wait For Activity_PermissionResult(Permission As String, Result As Boolean)
		If Not (Result) Then
			Log("camera permission error")
		End If
	End If
	
	HTTP.Initialize(Connected)
	
	LoggedCustomer.Initialize
	
	If ScreenX > ScreenY Then
		IsLandscape = True
	Else
		IsLandscape = False
	End If
	UISizes.Initialize(IsLandscape)
	
	ScreenLogin.Initialize
	ScreenRegister.Initialize
	AppMainScreen.Initialize
	ClientOrders.Initialize
	AppSettings.Initialize
	
	Activity.AddView(ScreenLogin.AsView,0,0,100%x,100%y)
	Activity.AddView(ScreenRegister.AsView,0,0,100%x,100%y)
	Activity.AddView(AppMainScreen.AsView,0,0,100%x,100%y)
	Activity.AddView(ClientOrders.AsView,0,0,100%x,100%y)
	Activity.AddView(AppSettings.AsView,-29%x,5%y,29%x,100%y)
	
	ScreenRegister.AsView.Visible = False
	ScreenRegister.AsView.Enabled = False
	
	AppMainScreen.AsView.Visible = False
	AppMainScreen.AsView.Enabled = False
	
	ClientOrders.AsView.Visible = False
	ClientOrders.AsView.Enabled = False

End Sub

Public Sub ShowOrderInfo(o As Order)
	ClientOrders.OrderInfoVisual.SetCurrentInfo(o)
End Sub

Public Sub ShowRegisterScreen
	If 	ScreenRegister.AsView.Visible = False Then
		ScreenRegister.AsView.Visible = True
		ScreenRegister.AsView.Enabled = True
	Else
		ScreenRegister.AsView.Visible = False
		ScreenRegister.AsView.Enabled = False
	End If
End Sub

Public Sub ShowMainScreen
	If 	AppMainScreen.AsView.Visible = False Then
		AppMainScreen.AsView.Visible = True
		AppMainScreen.AsView.Enabled = True
	Else
		AppMainScreen.AsView.Visible = False
		AppMainScreen.AsView.Enabled = False
	End If
End Sub

Public Sub ShowClientOrdersScreen
	If 	ClientOrders.AsView.Visible = False Then
		ClientOrders.AsView.Visible = True
		ClientOrders.AsView.Enabled = True
		ClientOrders.LoadClientOrders(LoggedCustomer.ID)
	Else
		ClientOrders.AsView.Visible = False
		ClientOrders.AsView.Enabled = False
	End If
End Sub

Public Sub ShowHideAppSettingsScreen
	
	If AppSettings.AsView.Left = -29%x Then
		AppSettings.AsView.SetLayoutAnimated(500,0%x,5%y,29%x,100%y)
	Else if AppSettings.AsView.Left = 0%x Then
		AppSettings.AsView.SetLayoutAnimated(500,-29%x,5%y,29%x,100%y)
	End If
	
End Sub

Public Sub HideMainScreen
	AppMainScreen.AsView.Visible = False
	AppMainScreen.AsView.Enabled = False
End Sub

Public Sub HideClientOrdersScreen
	ClientOrders.AsView.Visible = False
	ClientOrders.AsView.Enabled = False
End Sub

Public Sub HideAppSettingsScreen
	 If AppSettings.AsView.Left = 0%x Then
		AppSettings.AsView.SetLayoutAnimated(500,-29%x,5%y,29%x,100%y)
	 End If
End Sub

Public Sub HideSettingsWindows
	ScreenLogin.HideSettings
	AppMainScreen.HideSettings
	ClientOrders.HideSettings
End Sub

Sub Activity_Resume

End Sub

Sub Activity_Pause (UserClosed As Boolean)

End Sub

Public Sub APIVersion As Int
	Dim r As Reflector
	Dim Api As Int
	Api = r.GetStaticField("android.os.Build$VERSION", "SDK_INT")
	Return Api
End Sub

'Ping Google DNS - if you can't reach this you dont have internet on the device!
Sub Connected As Boolean
	Dim p As Phone
	Dim Response, Error As StringBuilder
	Response.Initialize
	Error.Initialize
	p.Shell("ping -c 1 8.8.8.8",Null,Response,Error)
	Log("======= Response ========")
	Log(Response)
	Log("======= Error ===========")
	Log(Error)
	Log("======================")

	If Error.ToString="" Then
		Return True
	Else
		Return False
	End If
End Sub

Public Sub ExitApp
	Dim result As Int 
	result = Msgbox2("Exit App?","Exit","Yes","Cancel","",Null)
	If result = DialogResponse.POSITIVE Then
		 ExitApplication
	End If
End Sub

Private Sub Activity_KeyPress (KeyCode As Int) As Boolean
	
	Dim ext As Int = 0
	If KeyCode = KeyCodes.KEYCODE_BACK Then
		
		If ScreenRegister.AsView.Visible = True Then
			ShowRegisterScreen
			ext = ext + 1
		End If
		
		If AppMainScreen.AsView.Visible = True Then
			If AppMainScreen.SettingsIsVisible = 0%x Then
				AppMainScreen.Settings_Click
			End If
			ShowMainScreen
			ext = ext + 1
		End If
		
		If ScreenLogin.SettingsIsVisible = 0%x Then
			ScreenLogin.Settings_Click
			ext = ext + 1
		End If
		
		ext = ext - 1
		
		If ext = -1 Then
			ExitApp
		End If
		
		Return True
	Else
		Return False
	End If
	
End Sub

Public Sub ShowItemInfo(g As Good,s As Supplier)
	AppMainScreen.InfoScreen.SetCurrentInfo(g,s)
End Sub

Public Sub ClearItemInfo
	AppMainScreen.InfoScreen.ClearInfo
End Sub
